package com.zhuye.zhengmeng.http;

import android.app.Activity;

import com.lzy.okgo.OkGo;
import com.lzy.okgo.callback.StringCallback;
import com.lzy.okgo.model.Response;
import com.zhuye.zhengmeng.App;
import com.zhuye.zhengmeng.Constant;
import com.zhuye.zhengmeng.http.callback.StringDialogCallback;


/**
 * 网络请求
 * Created by hpc on 2017/7/6.
 */

public class DreamApi {

    private static final String TAG = "DreamApi";

    //获取验证码
    public static void getSmsCode(Activity activity, final int what, final MyCallBack myCallBack) {
        OkGo.<String>get(Constant.GET_SMSCODE_URL)
                .tag(App.getInstance())
                .execute(new StringDialogCallback(activity, "请求验证码...") {
                    @Override
                    public void onSuccess(Response<String> response) {
                        myCallBack.onSuccess(what, response);
                    }

                    @Override
                    public void onError(Response<String> response) {
                        super.onError(response);
                        myCallBack.onFail(what, response);
                    }
                });
    }

    //注册
    public static void register(Activity activity, final int what, String mobile, String password, String verify, final MyCallBack myCallBack) {
        OkGo.<String>post(Constant.REGISTER_URL)
                .tag(App.getInstance())
                .params("mobile", mobile)
                .params("password", password)
                .params("verify", verify)
                .execute(new StringDialogCallback(activity, "请求注册...") {
                    @Override
                    public void onSuccess(Response<String> response) {
                        myCallBack.onSuccess(what, response);
                    }

                    @Override
                    public void onError(Response<String> response) {
                        super.onError(response);
                        myCallBack.onFail(what, response);
                    }
                });
    }

    //登录接口
    public static void login(Activity context, final int what, String type, String mobile,
                             String password, String usid, String avatar, String sex,
                             String user_nicename, final MyCallBack myCallBack) {
        OkGo.<String>post(Constant.LOGIN_URL)
                .tag(App.getInstance())
                .params("type", type)
                .params("mobile", mobile)
                .params("password", password)
                .params("usid", usid)
                .params("avatar", avatar)
                .params("sex", sex)
                .params("user_nicename", user_nicename)
                .execute(new StringDialogCallback(context, "登录中...") {
                    @Override
                    public void onSuccess(Response<String> response) {
                        myCallBack.onSuccess(what, response);
                    }

                    @Override
                    public void onError(Response<String> response) {
                        super.onError(response);
                        myCallBack.onFail(what, response);
                    }
                });
    }

    //验证验证码接口
    public static void verificCode(final int what, String mobile,
                                   String verify, final MyCallBack myCallBack) {
        OkGo.<String>post(Constant.VERIFIC_CODE_URL)
                .tag(App.getInstance())
                .params("mobile", mobile)
                .params("verify", verify)
                .execute(new StringCallback() {
                    @Override
                    public void onSuccess(Response<String> response) {
                        myCallBack.onSuccess(what, response);
                    }

                    @Override
                    public void onError(Response<String> response) {
                        super.onError(response);
                        myCallBack.onFail(what, response);
                    }
                });
    }

    //找回密码接口
    public static void changePassword(Activity context, final int what, String mobile,
                                      String verify, String password, final MyCallBack myCallBack) {
        OkGo.<String>post(Constant.CHANGE_PASSWORD_URL)
                .tag(App.getInstance())
                .params("mobile", mobile)
                .params("verify", verify)
                .params("password", password)
                .execute(new StringDialogCallback(context, "正在修改密码...") {
                    @Override
                    public void onSuccess(Response<String> response) {
                        myCallBack.onSuccess(what, response);
                    }

                    @Override
                    public void onError(Response<String> response) {
                        super.onError(response);
                        myCallBack.onFail(what, response);
                    }
                });
    }

    //获取收藏列表
    public static void getCollectList(Activity context, final int what, String token,
                                      int page, final MyCallBack myCallBack) {
        OkGo.<String>post(Constant.COLLECT_LIST_URL)
                .tag(App.getInstance())
                .params("token", token)
                .params("page", page)
                .execute(new StringDialogCallback(context, "数据加载中...") {
                    @Override
                    public void onSuccess(Response<String> response) {
                        myCallBack.onSuccess(what, response);
                    }

                    @Override
                    public void onError(Response<String> response) {
                        myCallBack.onFail(what, response);
                    }
                });
    }

    //用户动态列表
    public static void conditionList(Activity context, final int what, String token,
                                     String sum_number, String user_id, final MyCallBack myCallBack) {
        OkGo.<String>post(Constant.CONDITION_LIST_URL)
                .tag(App.getInstance())
                .params("token", token)
                .params("sum_number", sum_number)
                .params("user_id", user_id)
                .execute(new StringDialogCallback(context, "获取消息...") {
                    @Override
                    public void onSuccess(Response<String> response) {
                        myCallBack.onSuccess(what, response);
                    }

                    @Override
                    public void onError(Response<String> response) {
                        super.onError(response);
                        myCallBack.onFail(what, response);
                    }
                });
    }

    //用户动态列表
    public static void conditionListNorefresh(final int what, String token,
                                              String sum_number, String user_id, final MyCallBack myCallBack) {
        OkGo.<String>post(Constant.CONDITION_LIST_URL)
                .tag(App.getInstance())
                .params("token", token)
                .params("sum_number", sum_number)
                .params("user_id", user_id)
                .execute(new StringCallback() {
                    @Override
                    public void onSuccess(Response<String> response) {
                        myCallBack.onSuccess(what, response);
                    }

                    @Override
                    public void onError(Response<String> response) {
                        super.onError(response);
                        myCallBack.onFail(what, response);
                    }
                });
    }

    //获取用户信息
    public static void getUserInfo(final int what, String token, final MyCallBack myCallBack) {
        OkGo.<String>post(Constant.USERINFO_URL)
                .tag(App.getInstance())
                .params("token", token)
                .execute(new StringCallback() {
                    @Override
                    public void onSuccess(Response<String> response) {
                        myCallBack.onSuccess(what, response);
                    }

                    @Override
                    public void onError(Response<String> response) {
                        super.onError(response);
                        myCallBack.onFail(what, response);
                    }
                });
    }

    //签到
    public static void sign(final int what, String token, final MyCallBack myCallBack) {
        OkGo.<String>post(Constant.SIGN_URL)
                .tag(App.getInstance())
                .params("token", token)
                .execute(new StringCallback() {
                    @Override
                    public void onSuccess(Response<String> response) {
                        myCallBack.onSuccess(what, response);
                    }

                    @Override
                    public void onError(Response<String> response) {
                        super.onError(response);
                        myCallBack.onFail(what, response);
                    }
                });
    }

    //粉丝列表
    public static void getFansList(Activity activity, final int what, String token, String user_id, int page, final MyCallBack myCallBack) {
        OkGo.<String>post(Constant.FANS_LIST_URL)
                .tag(App.getInstance())
                .params("token", token)
                .params("user_id", user_id)
                .params("page", page)
                .execute(new StringDialogCallback(activity, "页面加载中...") {
                    @Override
                    public void onSuccess(Response<String> response) {
                        myCallBack.onSuccess(what, response);
                    }

                    @Override
                    public void onError(Response<String> response) {
                        super.onError(response);
                        myCallBack.onFail(what, response);
                    }
                });
    }

    //商城web url获取
    public static void getShopWebUrl(final int what, String token, final MyCallBack myCallBack) {
        OkGo.<String>post(Constant.SHOP_WEB_URL)
                .tag(App.getInstance())
                .params("token", token)
                .execute(new StringCallback() {
                    @Override
                    public void onSuccess(Response<String> response) {
                        myCallBack.onSuccess(what, response);
                    }

                    @Override
                    public void onError(Response<String> response) {
                        super.onError(response);
                        myCallBack.onFail(what, response);
                    }
                });
    }
}

