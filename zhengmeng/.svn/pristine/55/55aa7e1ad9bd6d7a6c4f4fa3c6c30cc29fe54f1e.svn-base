package com.zhuye.zhengmeng.bangdan;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;

import com.blankj.utilcode.util.SPUtils;
import com.blankj.utilcode.util.ToastUtils;
import com.flyco.dialog.listener.OnOperItemClickL;
import com.flyco.dialog.widget.ActionSheetDialog;
import com.google.gson.Gson;
import com.jude.easyrecyclerview.EasyRecyclerView;
import com.jude.easyrecyclerview.adapter.BaseViewHolder;
import com.jude.easyrecyclerview.adapter.RecyclerArrayAdapter;
import com.lzy.okgo.model.Response;
import com.zhuye.zhengmeng.R;
import com.zhuye.zhengmeng.bangdan.bean.SongsListBean;
import com.zhuye.zhengmeng.bangdan.viewHolder.SongsListViewHolder;
import com.zhuye.zhengmeng.base.BaseActivity;
import com.zhuye.zhengmeng.http.DreamApi;
import com.zhuye.zhengmeng.http.MyCallBack;
import com.zhuye.zhengmeng.view.MyAppTitle;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;

import butterknife.BindView;
import butterknife.ButterKnife;

public class SongsListActivity extends BaseActivity {


    @BindView(R.id.titleBar)
    MyAppTitle titleBar;
    @BindView(R.id.recyclerView)
    EasyRecyclerView recyclerView;
    private RecyclerArrayAdapter<SongsListBean.Data> songListAdapter;

    @Override
    protected void processLogic() {
        String token = SPUtils.getInstance("userInfo").getString("token");
        if (!token.equals("")) {
            DreamApi.getSongsList(0x001, this, token, 1, "", 0, myCallBack);
        }
    }

    @Override
    protected void setListener() {
        setTitle();
        recyclerView.setLayoutManager(new LinearLayoutManager(this));
    }

    private void setTitle() {
        titleBar.initViewsVisible(true, true, false, false);
        titleBar.setAppTitle("歌曲列表");
        titleBar.setTitleSize(20);
        titleBar.setOnLeftButtonClickListener(new MyAppTitle.OnLeftButtonClickListener() {
            @Override
            public void onLeftButtonClick(View v) {
                finish();
            }
        });
    }

    @Override
    protected void loadViewLayout() {
        setContentView(R.layout.activity_songs_list);
    }

    @Override
    protected Context getActivityContext() {
        return this;
    }

    private MyCallBack myCallBack = new MyCallBack() {
        @Override
        public void onSuccess(int what, Response<String> result) {
            switch (what) {
                case 0x001:
                    try {
                        JSONObject jsonObject = new JSONObject(result.body());
                        int code = jsonObject.getInt("code");
                        if (code == 200) {
                            SongsListBean songsListBean = new Gson().fromJson(result.body(), SongsListBean.class);
                            ArrayList<SongsListBean.Data> datas = new ArrayList<>();
                            for (int i = 0; i < songsListBean.data.size(); i++) {
                                datas.addAll(songsListBean.data);
                            }
                            initUi(datas);
                        }
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                    break;
            }
        }

        @Override
        public void onFail(int what, Response<String> result) {

        }

        @Override
        public void onFinish(int what) {

        }
    };

    private void initUi(ArrayList<SongsListBean.Data> datas) {

        recyclerView.setAdapterWithProgress(songListAdapter = new RecyclerArrayAdapter<SongsListBean.Data>(this) {
            @Override
            public BaseViewHolder OnCreateViewHolder(ViewGroup parent, int viewType) {
                SongsListViewHolder songsListViewHolder = new SongsListViewHolder(parent);
                songsListViewHolder.setCallBack(new SongsListViewHolder.allCheck() {
                    @Override
                    public void OnItemClickListener(String song_id, String song_name, String song_path, String lyric_path) {
                        chooseRecordType(song_id, song_name, song_path, lyric_path);
                    }
                });
                return songsListViewHolder;
            }

        });
        songListAdapter.addAll(datas);
    }

    private void chooseRecordType(final String song_id, final String song_name, final String song_path, final String lyric_path) {
        final String[] stringItems = {"音频录制", "视频录制"};
        final ActionSheetDialog dialog = new ActionSheetDialog(this, stringItems, null);
        dialog.title("录制").titleTextSize_SP(14.5f).show();
        dialog.setOnOperItemClickL(new OnOperItemClickL() {
            @Override
            public void onOperItemClick(AdapterView<?> parent, View view, int position, long id) {
                switch (position) {
                    case 0:
                        Intent intent = new Intent(SongsListActivity.this, AudioActivity.class);
                        intent.putExtra("song_id", song_id);
                        intent.putExtra("song_name", song_name);
                        intent.putExtra("song_path", song_path);
                        intent.putExtra("lyric_path", lyric_path);
                        startActivity(intent);
                        dialog.dismiss();
                        break;
                    case 1:
                        ToastUtils.showShort(position + "");
                        break;
                    default:
                        break;
                }

            }
        });
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        // TODO: add setContentView(...) invocation
        ButterKnife.bind(this);
    }
}
